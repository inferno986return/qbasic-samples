'============================================================================
'     To: ALL                           Number: 35       Refer: 2934  
'   From: KEVIN SMITH               Conference: FidoQBasic   (139)
'   Date: 02-18-96 13:25              BBS Name: Exec-PC
'Subject: PacMan Screen Saver   1/4     BBS ID: EXECPC
'----------------------------------------------------------------------------
'
'Here's a test message.. It's my PacMan Screen Saver.. took a while for
'me to write the whole thing.  Anyone have any suggestions as to how I
'could make it any better?  Thanks... (p.s.  It's speed is set up for a
'486sx/33 so if your system is faster, just change the delay to a larger
'number (a 386sx/33 should be around 100)
'------------------------ CUT HERE -----------------------
' ******************************************************************
' **  KEVIN SMITH  ********  PACMAN.BAS  *********  JAN 14, 1996  **
' ******************************************************************
' **  PURPOSE:  TO CREATE A PAC-MAN SCREEN SAVER THAT WILL GO IN  **
' **            ALL FOUR DIRECTIONS INSTEAD OF ONLY ONE USING     **
' **            DATA FILES INSTEAD OF REDRAWING ALL THE GRAPHICS  **
' **            EACH TIME THE PROGRAM IS RUN.                     **
' ******************************************************************
ON ERROR GOTO ERRORCONTROL
RANDOMIZE TIMER
SCREEN 13
DIM RPAC1(1 TO 400)
DIM RPAC2(1 TO 400)
DIM RPAC3(1 TO 400)
DIM RPAC4(1 TO 400)
DIM RPAC5(1 TO 400)
DIM RPAC6(1 TO 400)
DIM RPAC7(1 TO 400)
DIM LPAC1(1 TO 400)
DIM LPAC2(1 TO 400)
DIM LPAC3(1 TO 400)
DIM LPAC4(1 TO 400)
DIM LPAC5(1 TO 400)
DIM LPAC6(1 TO 400)
DIM LPAC7(1 TO 400)
DIM UPAC1(1 TO 400)
DIM UPAC2(1 TO 400)
DIM UPAC3(1 TO 400)
DIM UPAC4(1 TO 400)
DIM UPAC5(1 TO 400)
DIM UPAC6(1 TO 400)
DIM UPAC7(1 TO 400)
DIM DPAC1(1 TO 400)
DIM DPAC2(1 TO 400)
DIM DPAC3(1 TO 400)
DIM DPAC4(1 TO 400)
DIM DPAC5(1 TO 400)
DIM DPAC6(1 TO 400)
DIM DPAC7(1 TO 400)
DEF SEG = VARSEG(RPAC1(1))
BLOAD "RPAC1.DAT", VARPTR(RPAC1(1))
DEF SEG
DEF SEG = VARSEG(LPAC1(1))
BLOAD "LPAC1.DAT", VARPTR(LPAC1(1))
DEF SEG
DEF SEG = VARSEG(UPAC1(1))
BLOAD "UPAC1.DAT", VARPTR(UPAC1(1))
DEF SEG
DEF SEG = VARSEG(DPAC1(1))
BLOAD "DPAC1.DAT", VARPTR(DPAC1(1))
DEF SEG
DEF SEG = VARSEG(RPAC2(1))
BLOAD "RPAC2.DAT", VARPTR(RPAC2(1))
DEF SEG
DEF SEG = VARSEG(LPAC2(1))
BLOAD "LPAC2.DAT", VARPTR(LPAC2(1))
DEF SEG
DEF SEG = VARSEG(UPAC2(1))
BLOAD "UPAC2.DAT", VARPTR(UPAC2(1))
DEF SEG
DEF SEG = VARSEG(DPAC2(1))
BLOAD "DPAC2.DAT", VARPTR(DPAC2(1))
DEF SEG
DEF SEG = VARSEG(RPAC3(1))
BLOAD "RPAC3.DAT", VARPTR(RPAC3(1))
DEF SEG
DEF SEG = VARSEG(LPAC3(1))
BLOAD "LPAC3.DAT", VARPTR(LPAC3(1))
DEF SEG
DEF SEG = VARSEG(UPAC3(1))
BLOAD "UPAC3.DAT", VARPTR(UPAC3(1))
DEF SEG
DEF SEG = VARSEG(DPAC3(1))
BLOAD "DPAC3.DAT", VARPTR(DPAC3(1))
DEF SEG
DEF SEG = VARSEG(RPAC4(1))
BLOAD "RPAC4.DAT", VARPTR(RPAC4(1))
DEF SEG
DEF SEG = VARSEG(LPAC4(1))
BLOAD "LPAC4.DAT", VARPTR(LPAC4(1))
DEF SEG
DEF SEG = VARSEG(UPAC4(1))
BLOAD "UPAC4.DAT", VARPTR(UPAC4(1))
DEF SEG
DEF SEG = VARSEG(DPAC4(1))
BLOAD "DPAC4.DAT", VARPTR(DPAC4(1))
DEF SEG
DEF SEG = VARSEG(RPAC5(1))
BLOAD "RPAC5.DAT", VARPTR(RPAC5(1))
DEF SEG
DEF SEG = VARSEG(LPAC5(1))
BLOAD "LPAC5.DAT", VARPTR(LPAC5(1))
DEF SEG
DEF SEG = VARSEG(UPAC5(1))
BLOAD "UPAC5.DAT", VARPTR(UPAC5(1))
DEF SEG
DEF SEG = VARSEG(DPAC5(1))
BLOAD "DPAC5.DAT", VARPTR(DPAC5(1))
DEF SEG
DEF SEG = VARSEG(RPAC6(1))
BLOAD "RPAC6.DAT", VARPTR(RPAC6(1))
DEF SEG
DEF SEG = VARSEG(LPAC6(1))
BLOAD "LPAC6.DAT", VARPTR(LPAC6(1))
DEF SEG
DEF SEG = VARSEG(UPAC6(1))
BLOAD "UPAC6.DAT", VARPTR(UPAC6(1))
DEF SEG
DEF SEG = VARSEG(DPAC6(1))
BLOAD "DPAC6.DAT", VARPTR(DPAC6(1))
DEF SEG
DEF SEG = VARSEG(RPAC7(1))
BLOAD "RPAC7.DAT", VARPTR(RPAC7(1))
DEF SEG
DEF SEG = VARSEG(LPAC7(1))
BLOAD "LPAC7.DAT", VARPTR(LPAC7(1))
DEF SEG
DEF SEG = VARSEG(UPAC7(1))
BLOAD "UPAC7.DAT", VARPTR(UPAC7(1))
DEF SEG
DEF SEG = VARSEG(DPAC7(1))
BLOAD "DPAC7.DAT", VARPTR(DPAC7(1))
DEF SEG
UPKEY$ = CHR$(0) + CHR$(72)
DOWNKEY$ = CHR$(0) + CHR$(80)
LEFTKEY$ = CHR$(0) + CHR$(75)
RIGHTKEY$ = CHR$(0) + CHR$(77)
CLS
DIRECTION = 1
X = 15
Y = 10
DO
'>>> Continued to next message
'>>> Continued from previous message
IF INKEY$ = CHR$(27) THEN EXIT DO
IF TURNS > NUMTURNS THEN
        TURNS = 0
        DIRECTION = INT(RND * 4) + 1
        NUMTURNS = INT(RND * 7) + 2
END IF
IF DIRECTION < 2 THEN GOSUB RIGHT
IF DIRECTION = 2 THEN GOSUB DOWN
IF DIRECTION = 3 THEN GOSUB LEFT
IF DIRECTION > 3 THEN GOSUB UP
TURNS = TURNS + 1
WAIT &H3DA, 8: WAIT &H3DA, 8, 0
LOOP
CLS
SCREEN 0
WIDTH 80
END
RIGHT:
PUT (X, Y), RPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1
PUT (X, Y), RPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X < 250 THEN X = X + 1 ELSE NUMTURNS = 0
RETURN
LEFT:
PUT (X, Y), LPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1
PUT (X, Y), LPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF X > 15 THEN X = X - 1 ELSE NUMTURNS = 0
RETURN
UP:
PUT (X, Y), UPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1
PUT (X, Y), UPAC1, PSET
'>>> Continued to next message
'>>> Continued from previous message
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y > 10 THEN Y = Y - 1 ELSE NUMTURNS = 0
RETURN
DOWN:
PUT (X, Y), DPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC7, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC6, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC5, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC4, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC3, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC2, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1
PUT (X, Y), DPAC1, PSET
FOR DELAY = 1 TO 700: NEXT DELAY
IF Y < 150 THEN Y = Y + 1 ELSE NUMTURNS = 0
RETURN
MAKEDAT:
CLS
FOR X = 1 TO 10
CIRCLE (20, 20), X, 14
CIRCLE (21, 20), X, 14
NEXT X
DRAW "BM20,15C0U1R2D1L2U1"
GET (1, 1)-(30, 30), RPAC1
LINE (20, 20)-(30, 20), 0
GET (1, 1)-(30, 30), RPAC2
LINE (20, 20)-(30, 19), 0
LINE (20, 20)-(30, 21), 0
GET (1, 1)-(30, 30), RPAC3
LINE (20, 20)-(30, 18), 0
LINE (20, 20)-(30, 22), 0
GET (1, 1)-(30, 30), RPAC4
LINE (20, 20)-(30, 17), 0
LINE (20, 20)-(30, 23), 0
GET (1, 1)-(30, 30), RPAC5
LINE (20, 20)-(30, 16), 0
LINE (20, 20)-(30, 24), 0
GET (1, 1)-(30, 30), RPAC6
LINE (20, 20)-(30, 15), 0
LINE (20, 20)-(30, 25), 0
GET (1, 1)-(30, 30), RPAC7
CLS
FOR X = 0 TO 10
CIRCLE (20, 20), X, 14
CIRCLE (21, 20), X, 14
NEXT X
DRAW "BM20,15C0U1R2D1L2U1"
GET (10, 1)-(40, 30), LPAC1
LINE (20, 20)-(10, 20), 0
GET (10, 1)-(40, 30), LPAC2
LINE (20, 20)-(10, 19), 0
LINE (20, 20)-(10, 21), 0
GET (10, 1)-(40, 30), LPAC3
LINE (20, 20)-(10, 18), 0
LINE (20, 20)-(10, 22), 0
GET (10, 1)-(40, 30), LPAC4
LINE (20, 20)-(10, 17), 0
LINE (20, 20)-(10, 23), 0
GET (10, 1)-(40, 30), LPAC5
LINE (20, 20)-(10, 16), 0
LINE (20, 20)-(10, 24), 0
GET (10, 1)-(40, 30), LPAC6
LINE (20, 20)-(10, 15), 0
LINE (20, 20)-(10, 25), 0
GET (10, 1)-(40, 30), LPAC7
CLS
FOR X = 1 TO 10
CIRCLE (20, 20), X, 14
CIRCLE (21, 20), X, 14
NEXT X
DRAW "BM15,20C0U1R2D1L2U1"
GET (1, 1)-(30, 30), DPAC1
LINE (20, 20)-(20, 30), 0
GET (1, 1)-(30, 30), DPAC2
LINE (20, 20)-(19, 30), 0
LINE (20, 20)-(21, 30), 0
GET (1, 1)-(30, 30), DPAC3
LINE (20, 20)-(18, 30), 0
LINE (20, 20)-(22, 30), 0
GET (1, 1)-(30, 30), DPAC4
LINE (20, 20)-(17, 30), 0
LINE (20, 20)-(23, 30), 0
GET (1, 1)-(30, 30), DPAC5
LINE (20, 20)-(16, 30), 0
LINE (20, 20)-(24, 30), 0
GET (1, 1)-(30, 30), DPAC6
LINE (20, 20)-(15, 30), 0
LINE (20, 20)-(25, 30), 0
GET (1, 1)-(30, 30), DPAC7
CLS
FOR X = 1 TO 10
CIRCLE (20, 20), X, 14
CIRCLE (21, 20), X, 14
NEXT X
DRAW "BM15,20C0U1R2D1L2U1"
GET (1, 1)-(30, 30), UPAC1
LINE (20, 20)-(20, 10), 0
GET (1, 1)-(30, 30), UPAC2
LINE (20, 20)-(19, 10), 0
LINE (20, 20)-(21, 10), 0
GET (1, 1)-(30, 30), UPAC3
LINE (20, 20)-(18, 10), 0
LINE (20, 20)-(22, 10), 0
GET (1, 1)-(30, 30), UPAC4
LINE (20, 20)-(17, 10), 0
LINE (20, 20)-(23, 10), 0
GET (1, 1)-(30, 30), UPAC5
LINE (20, 20)-(16, 10), 0
LINE (20, 20)-(24, 10), 0
GET (1, 1)-(30, 30), UPAC6
LINE (20, 20)-(15, 10), 0
LINE (20, 20)-(25, 10), 0
GET (1, 1)-(30, 30), UPAC7
CLS
'>>> Continued to next message
'>>> Continued from previous message
SCREEN 0
WIDTH 80
PRINT "CREATING DATA FILES... PLEASE WAIT"
DEF SEG = VARSEG(RPAC1(1))
BSAVE "RPAC1.DAT", VARPTR(RPAC1(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC1(1))
BSAVE "LPAC1.DAT", VARPTR(LPAC1(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC1(1))
BSAVE "UPAC1.DAT", VARPTR(UPAC1(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC1(1))
BSAVE "DPAC1.DAT", VARPTR(DPAC1(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC2(1))
BSAVE "RPAC2.DAT", VARPTR(RPAC2(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC2(1))
BSAVE "LPAC2.DAT", VARPTR(LPAC2(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC2(1))
BSAVE "UPAC2.DAT", VARPTR(UPAC2(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC2(1))
BSAVE "DPAC2.DAT", VARPTR(DPAC2(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC3(1))
BSAVE "RPAC3.DAT", VARPTR(RPAC3(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC3(1))
BSAVE "LPAC3.DAT", VARPTR(LPAC3(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC3(1))
BSAVE "UPAC3.DAT", VARPTR(UPAC3(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC3(1))
BSAVE "DPAC3.DAT", VARPTR(DPAC3(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC4(1))
BSAVE "RPAC4.DAT", VARPTR(RPAC4(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC4(1))
BSAVE "LPAC4.DAT", VARPTR(LPAC4(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC4(1))
BSAVE "UPAC4.DAT", VARPTR(UPAC4(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC4(1))
BSAVE "DPAC4.DAT", VARPTR(DPAC4(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC5(1))
BSAVE "RPAC5.DAT", VARPTR(RPAC5(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC5(1))
BSAVE "LPAC5.DAT", VARPTR(LPAC5(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC5(1))
BSAVE "UPAC5.DAT", VARPTR(UPAC5(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC5(1))
BSAVE "DPAC5.DAT", VARPTR(DPAC5(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC6(1))
BSAVE "RPAC6.DAT", VARPTR(RPAC6(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC6(1))
BSAVE "LPAC6.DAT", VARPTR(LPAC6(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC6(1))
BSAVE "UPAC6.DAT", VARPTR(UPAC6(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC6(1))
BSAVE "DPAC6.DAT", VARPTR(DPAC6(1)), 1600
DEF SEG
DEF SEG = VARSEG(RPAC7(1))
BSAVE "RPAC7.DAT", VARPTR(RPAC7(1)), 1600
DEF SEG
DEF SEG = VARSEG(LPAC7(1))
BSAVE "LPAC7.DAT", VARPTR(LPAC7(1)), 1600
DEF SEG
DEF SEG = VARSEG(UPAC7(1))
BSAVE "UPAC7.DAT", VARPTR(UPAC7(1)), 1600
DEF SEG
DEF SEG = VARSEG(DPAC7(1))
BSAVE "DPAC7.DAT", VARPTR(DPAC7(1)), 1600
DEF SEG
RETURN
ERRORCONTROL:
SELECT CASE ERR
        CASE 53
                DEF SEG
                GOSUB MAKEDAT
                PRINT "DATA FILES CREATED.  YOU MAY NOW RUN THIS PROGRAM AGAIN."
                END
        CASE ELSE
                SCREEN 0
                WIDTH 80
                COLOR 20
                PRINT "AN ERROR HAS OCCURED!"
                COLOR 7
                PRINT "ERROR CODE ="; ERR
                END
END SELECT
'---------------------- CUT HERE -----------------------
'                                      Kevin Smith
'                                CrystalSoft Programming
' * Apex v4 * Southern DOS:  Y'all reckon? [yep/nope]
' * SLMR 2.1a *
'--- GEcho/32 1.20/Pro
' * Origin: *The Elk River BBS (615) 455-1019 454-2295* (1:3622/1000)
                                                     

